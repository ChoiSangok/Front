+ undefined
 - 변수가 초기화되지 않은 상태
 
 - 변수의 값이 할당되지 않은 상태
 
 - 데이터타입조차 결정되지 않은 상황
 

+ null
 - object 타입의 데이터 
 
 - 키워드
 
 - 참조대상이 없음
 

+ JS 변수 선언 키워드

 - var
     같은 이름의 변수를 여러번 선언해도 에러나지 않고 하나의 변수로 취급한다
     
     ex )  var data1 = 10;
           var data2 = 20;
           -> data1변수에 10 초기화되었다가 20 대입됨
 
 - let
     같은 이름의 변수를 여러 번 선언할 수 있다
     
     ex)   let data2 = 10;
           let data2 = 20; //에러, data2가 이미 선언됨
 
 - const
     let과 같음
     
     변수값 초기화는 가능하지만 이후에 대입이 안된다
     
     변수값 초기화는 필수 ( 안하면 에러 ) 
 

+ 적용되는 스코프

 - var : function scope
 
 - let, const : block scope
 
 - var 변수는 함수 내 지역스코프 특성이 부여된다
 
 - let, const 는 블록에서 만들어진 변수라면 지역스코프 특성이 부여된다
 ( 익명블록, 제어문 등등)
 

+ 호이스팅 ( Hoisting ) ( 뜻: 끌어올리기 )

 - 변수의 선언코드나 함수의 정의코드가 해당 스코프의 가장 처음 부분에 작성된 것처럼 동작하게 만드는 특성
 
 - 실제는 코드영역의 처음에 작성되어 있지는 않지만 미리 선언이 완료된 것처럼 동작되는 것을 말한다
 
         ex)  console.log( data3 ); //에러나지 않고 undefined 출력 ( 호이스팅 _)
              var data3  =100;
              console.log(data3); //정상적으로 100 출력


 - var, let, const 모두 호이스팅이 발생한다
 
 - var 는 실제 선언코드 이전에 접근 가능하다
 
 - let, const 는 실제 선언코드 이전에 접근하는 것을 금지시킨다









 
